apply plugin: 'org.jetbrains.kotlin.multiplatform'
//apply plugin: 'org.jetbrains.dokka'
//apply plugin: 'maven'
//apply plugin: 'com.jfrog.bintray'

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.2'
    }
}

kotlin {
    targetFromPreset(presets.jvmWithJava, 'jvm')
    linuxX64()
    mingwX64('winX64')

    sourceSets {
        commonMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                api 'org.jetbrains.kotlin:kotlin-stdlib'
            }
        }
        jvmTest {
            dependencies {
                implementation 'junit:junit:4.12'
                implementation 'io.kotlintest:kotlintest-assertions:3.3.2'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
                implementation 'com.github.stefanbirkner:system-rules:1.18.0'
                implementation 'com.google.jimfs:jimfs:1.1'
            }
        }
        test {
            // Not required, but helps IntelliJ configure inter-project dependencies:
            // https://youtrack.jetbrains.com/issue/KT-31179
            dependsOn jvmTest
        }
        configure([linuxX64Main, winX64Main]) {
            dependsOn commonMain
        }
    }
}

//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier = 'sources'
//    from sourceSets.main.allSource
//}
//
//task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
//    outputFormat = 'javadoc'
//    outputDirectory = javadoc.destinationDir
//}
//
//task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives javadocJar
//    archives sourcesJar
//}
//
//dokka {
//    outputDirectory = "$rootDir/docs/api"
//    outputFormat = 'gfm'
//}
//
//ext {
//    pkgName = 'clikt'
//    pkgDesc = 'Intuitive command line interface parsing for Kotlin'
//    githubRepo = 'github.com/ajalt/clikt'
//    pkgLicense = 'Apache-2.0'
//    pkgLicenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//    devInfo = {
//        id 'ajalt'
//        name 'AJ Alt'
//        url 'https://github.com/ajalt'
//    }
//    bintrayUser = System.getenv('BINTRAY_USER')
//    bintrayKey = System.getenv('BINTRAY_API_KEY')
//    mavenUserToken = System.getenv('MAVEN_USER_TOKEN')
//    mavenUserPass = System.getenv('MAVEN_USER_PASS')
//    deployDryRun = false
//}

// jvm
apply plugin: 'java-library'

kotlin.targets.matching { it.platformType.name == 'jvm' }.all { target ->
    target.project.sourceCompatibility = JavaVersion.VERSION_1_8
    target.project.targetCompatibility = JavaVersion.VERSION_1_8

    tasks['jar'].configure {
        manifest {
            attributes('Automatic-Module-Name': 'com.github.ajalt.clikt')
        }
    }
}

//apply from: "$rootDir/deploy.gradle"
